[package]
name = "gxhash"
authors = ["Olivier Giniaux"]
version = "2.0.0"
edition = "2021"
description = "GxHash non-cryptographic algorithm"
license = "MIT"
readme = "README.md"
repository = "https://github.com/ogxd/gxhash"
documentation = "https://docs.rs/gxhash/latest/gxhash"
keywords = ["hash", "hasher", "hashmap", "no-std", "crypto"]
categories = ["algorithms", "data-structures", "no-std"]
exclude = ["article/*"]

[features]
# The 256-bit state GxHash is faster for large inputs than the default 128-bit state implementation, but faster on smaller hashes.
# Please not however that the 256-bit GxHash and the 128-bit GxHash don't generate the same hashes for a same input.
# Requires AVX2 and VAES (X86).
avx2 = []
# Only relevant for throughput benchmarks
bench-csv = []
bench-md = []

[dependencies]
rand = "0.8"

[dev-dependencies]
rstest = "0.18.2"
criterion = { version = "0.5.1" }
lazy_static = { version = "1.3" }
# Other hash algorithms, for comparison.
ahash = "0.8.3"
t1ha = "0.1.0"
twox-hash = "1.6.3"
highway = "1.1.0"
seahash = "4.1.0"
metrohash = "1.0.6"
fnv = "1.0.3"

[[bench]]
name = "throughput"
harness = false

[[bench]]
name = "throughput_criterion"
harness = false

[[bench]]
name = "ilp"
harness = false

[[bench]]
name = "hashset"
harness = false